generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  avatar    String?
  role      Role     @default(USER) // 添加角色字段
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  USER
}

model File {
  id         String   @id @default(cuid())
  filename   String
  filetypeId String
  uploadtime DateTime @default(now())

  filetype              FileType                @relation(fields: [filetypeId], references: [id], onDelete: Cascade)
  RentSupplementRequest RentSupplementRequest[]
  Individuals           Individuals[]
  FlowThrough           FlowThrough[]
  LossOfService         LossOfService[]
  GoalsAndProgress      GoalsAndProgress[]
  SafetyPlan            SafetyPlan[]
  OverdoseSafetyPlan    OverdoseSafetyPlan[]
  IncidentReport        IncidentReport[]
  UniqueIndividual      UniqueIndividual[]
  ShelterDiversionLog   ShelterDiversionLog[]
  SiteList              SiteList[]
  IntakeReport          IntakeReport[]

  @@index([filetypeId])
}

model FileType {
  id       String   @id @default(cuid())
  typename String   @unique
  createAt DateTime @default(now())

  files File[]
}

model Individuals {
  id                    String    @id @default(cuid())
  ClientPhoto           String?
  person                String
  dateOfBirth           DateTime?
  site                  String?
  programs              String?
  dateEnteredIntoSystem DateTime?

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)
}

model FlowThrough {
  id            String    @id @default(cuid())
  individual    String
  programOrSite String?
  startDate     DateTime?
  exitDate      DateTime?
  exitReason    String?

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model LossOfService {
  id                                String    @id @default(cuid())
  Individual                        String
  ManagerApproved                   String?
  ProgramOrSite                     String?
  RationaleForLOSMore48Hours        String?
  ReasonAndRationaleForRestriction  String?
  ReviewForTPCSLOS                  String?
  StaffReporting                    String?
  StartDateTimeOfLOS                DateTime?
  WasThisRelatedToACriticalIncident String?
  EndDateTimeOfLOS                  DateTime?

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model RentSupplementRequest {
  id            String  @id @default(cuid())
  Individual    String
  programOrSite String?
  Notes         String?
  fileId        String?
  file          File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model GoalsAndProgress {
  id               String    @id @default(cuid())
  individual       String
  programResidence String?
  goalTitle        String?
  goalType         String?
  startDate        DateTime?
  completionDate   DateTime?
  discontinuedDate DateTime?
  goalDescription  String?
  personalOutcome  String?

  fileId String?
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model SafetyPlan {
  id                     String  @id @default(cuid())
  individual             String // 个人姓名
  programOrSite          String? // 计划/居住地
  selfSoothingStrategies String? // 自我安抚策略
  reasonsForLiving       String? // 生活意义（帮助度过困难时期）
  supportConnections     String? // 支持联系人
  safeSpaces             String? // 安全地点

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model OverdoseSafetyPlan {
  id                   String    @id @default(cuid())
  CrisisContacts       String?
  Individual           String
  ProgramOrSite        String?
  RiskFactors          String?
  RiskReductionActions String?
  StaffMember          String?
  SupportPeople        String?
  TodaysDate           DateTime?
  WellnessHabits       String?

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model IncidentReport {
  id                    String    @id @default(cuid())
  clientInvolved        String
  programOrSite         String?
  dateAndTimeOfIncident DateTime?
  degreeOfInjury        String?
  typeOfInjury          String?
  typeOfSeriousIncident String?

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model UniqueIndividual {
  id                    String    @id @default(cuid())
  name                  String // 个人姓名
  dateOfBirth           DateTime? // 出生日期
  site                  String? // 站点
  programs              String? // 参与的项目
  dateEnteredIntoSystem DateTime? // 录入系统日期

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model ShelterDiversionLog {
  id                      String    @id @default(cuid())
  community               String? // 社区
  currentGoals            String? // 当前目标
  currentGoalsDescription String?
  diversionCost           Float? // 转移成本
  diversionMethod         String? // 转移方式
  divertedTo              String? // 转移至何处
  evictionPrevention      String? // 是否涉及驱逐预防
  followUpLog             String? // 跟进记录
  initialFollowUpDate     DateTime? // 初始跟进日期
  referralLog             String? // 推荐记录
  successfulDiversion     String? // 是否成功转移

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)

  @@index([fileId])
}

model SiteList {
  id                  String @id @default(cuid())
  Address             String
  City                String
  HousingType         String
  ManagerOrSite       String
  ManagersPhoneNumber String
  Site                String
  SitePhoneNumber     String

  fileId String? // 允许为空
  file   File?   @relation(fields: [fileId], references: [id], onDelete: Cascade)
}

model IntakeReport {
  id        String   @id @default(cuid())
  fileId    String // 关联 File 表
  file      File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  immediateNeeds             ImmediateNeed[]
  previousLivingSituations   PreviousLivingSituation[]
  citizenImmigrationStatuses CitizenImmigrationStatus[]
  veteranStatuses            VeteranStatus[]
  incomeTypes                IncomeType[]

  @@index([fileId])
}

model ImmediateNeed {
  id       String       @id @default(cuid())
  reportId String
  report   IntakeReport @relation(fields: [reportId], references: [id], onDelete: Cascade)

  category   String // e.g. "Addictions Recovery Services"
  count      Int
  percentage Float
}

model PreviousLivingSituation {
  id       String       @id @default(cuid())
  reportId String
  report   IntakeReport @relation(fields: [reportId], references: [id], onDelete: Cascade)

  situation  String // e.g. "Emergency Shelter"
  count      Int
  percentage Float
}

model CitizenImmigrationStatus {
  id       String       @id @default(cuid())
  reportId String
  report   IntakeReport @relation(fields: [reportId], references: [id], onDelete: Cascade)

  status     String // e.g. "Refugee"
  count      Int
  percentage Float
}

model VeteranStatus {
  id       String       @id @default(cuid())
  reportId String
  report   IntakeReport @relation(fields: [reportId], references: [id], onDelete: Cascade)

  status     String
  count      Int
  percentage Float
}

model IncomeType {
  id       String       @id @default(cuid())
  reportId String
  report   IntakeReport @relation(fields: [reportId], references: [id], onDelete: Cascade)

  type       String // e.g. "CPP", "No Income"
  count      Int
  percentage Float
}
